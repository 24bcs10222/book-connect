name: BookConnect Build Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_ROOT_PASSWORD }}
          POSTGRES_DB: book_connect
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U ${{ secrets.DATABASE_USER }}" --health-interval 10s

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until pg_isready -h127.0.0.1 -U ${{ secrets.DATABASE_USER }}; do
            sleep 1
          done

      - name: Creating test database and granting privileges
        run: |
          PGPASSWORD=${{ secrets.DATABASE_ROOT_PASSWORD }} psql -h127.0.0.1 -U postgres -c "CREATE DATABASE IF NOT EXISTS book_connect;"
          PGPASSWORD=${{ secrets.DATABASE_ROOT_PASSWORD }} psql -h127.0.0.1 -U postgres -c "CREATE USER ${{ secrets.DATABASE_USER }} WITH PASSWORD '${{ secrets.MYSQL_PASSWORD }}';"
          PGPASSWORD=${{ secrets.DATABASE_ROOT_PASSWORD }} psql -h127.0.0.1 -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE book_connect TO ${{ secrets.DATABASE_USER }};"

      - name: Injecting required data
        run: |
          sed -i 's/username: replace_me_username/username: ${{ secrets.DATABASE_USER }}/' src/main/resources/application.yml
          sed -i 's/password: replace_me_password/password: ${{ secrets.MYSQL_PASSWORD }}/' src/main/resources/application.yml
          sed -i '/jwt-secret-key:/ s/$/ ${{ secrets.JWT_SECRET_KEY }}/' src/main/resources/application.yml

      - name: Building BookConnect
        run: mvn -B package --file pom.xml